apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: websvc
  labels:
    app.kubernetes.io/name: websvc
    app.kubernetes.io/instance: 0.1.0
  annotations:
    getambassador.io/rolloutId: ee7b914d-56f1-4450-8bd1-0c1214464045
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    canary:
      maxSurge: 1
      canaryService: websvc-canary
      stableService: websvc
      trafficRouting:
        ambassador:
          mappings:
            - websvc-mapping
      steps:
        - setWeight: 100
        - pause:
            duration: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: websvc
      app.kubernetes.io/instance: 0.1.0
  template:
    metadata:
      annotations:
        'getambassador.io/inject-traffic-agent': enabled
      labels:
        app.kubernetes.io/name: websvc
        app.kubernetes.io/instance: 0.1.0
    spec:
      serviceAccountName: websvc
      securityContext:
        fsGroup: 2000
      containers:
        - name: websvc
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 3000
          image: "index.docker.io/thedevelopnik/es-overview-websvc:c001a56e3c5d57f61ff3c10e47ed13752f695bb3"
          imagePullPolicy: Always
          env:
            - name: VUE_APP_CHATSVC_HOST
              value: chatsvc.thedevelopnik.com
            - name: VUE_APP_CHATSVC_SOCKET_PROTOCOL
              value: wss://
            - name: VUE_APP_CHATSVC_TCP_PROTOCOL
              value: https://
            - name: VUE_APP_USERSVC_HOST
              value: usersvc.thedevelopnik.com
            - name: VUE_APP_USERSVC_TCP_PROTOCOL
              value: https://
            - name: VUE_APP_BASE_URL
              value: https://esdemo.thedevelopnik.com
          command:
            - web
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          startupProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 10
            periodSeconds: 20
            timeoutSeconds: 1
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 3
            failureThreshold: 2
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 5
            failureThreshold: 5
            timeoutSeconds: 3
            successThreshold: 1
